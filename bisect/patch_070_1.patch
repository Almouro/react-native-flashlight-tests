diff --git a/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java b/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java
index f746f398f7c..d961c65713b 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java
+++ b/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java
@@ -858,7 +858,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
   @Override
   public @UIManagerType int getUIManagerType() {
-    return mUIManagerType;
+    return UIManagerType.DEFAULT;
   }
 
   @Nullable
diff --git a/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java b/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java
index 0b6a1140c8e..c1abf03ac89 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java
+++ b/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java
@@ -159,7 +159,7 @@ public abstract class Event<T extends Event> {
   }
 
   public final @UIManagerType int getUIManagerType() {
-    return mUIManagerType;
+    return UIManagerType.DEFAULT;
   }
 
   /** @return the name of this event as registered in JS */
diff --git a/packages/rn-tester/android/app/gradle.properties b/packages/rn-tester/android/app/gradle.properties
index c780b9d10b8..59fa1785ef2 100644
--- a/packages/rn-tester/android/app/gradle.properties
+++ b/packages/rn-tester/android/app/gradle.properties
@@ -11,3 +11,7 @@ android.enableJetifier=true
 
 # Version of flipper SDK to use with React Native
 FLIPPER_VERSION=0.125.0
+
+# RN-Tester is running with Hermes enabled and filtering variants with enableHermesOnlyInVariants
+hermesEnabled=true
+newArchEnabled=false
diff --git a/packages/rn-tester/android/app/src/main/java/com/facebook/react/uiapp/RNTesterApplication.java b/packages/rn-tester/android/app/src/main/java/com/facebook/react/uiapp/RNTesterApplication.java
index 12d2825968a..f207d5b0b03 100644
--- a/packages/rn-tester/android/app/src/main/java/com/facebook/react/uiapp/RNTesterApplication.java
+++ b/packages/rn-tester/android/app/src/main/java/com/facebook/react/uiapp/RNTesterApplication.java
@@ -48,6 +48,10 @@ import java.util.List;
 import java.util.Map;
 
 public class RNTesterApplication extends Application implements ReactApplication {
+  static {
+    ReactFeatureFlags.useTurboModules = false;
+    ReactFeatureFlags.enableFabricRenderer = false;
+  }
 
   private final ReactNativeHost mReactNativeHost =
       new ReactNativeHost(this) {
@@ -185,7 +189,6 @@ public class RNTesterApplication extends Application implements ReactApplication
 
   @Override
   public void onCreate() {
-    ReactFeatureFlags.useTurboModules = BuildConfig.ENABLE_TURBOMODULE;
     ReactFontManager.getInstance().addCustomFont(this, "Rubik", R.font.rubik);
     super.onCreate();
     SoLoader.init(this, /* native exopackage */ false);
diff --git a/packages/rn-tester/js/RNTesterAppShared.js b/packages/rn-tester/js/RNTesterAppShared.js
index fc35f5c89f5..f0c2e8cd2bc 100644
--- a/packages/rn-tester/js/RNTesterAppShared.js
+++ b/packages/rn-tester/js/RNTesterAppShared.js
@@ -1,223 +1,3 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow
- */
+import App from './pokedex/App';
 
-import {
-  BackHandler,
-  StyleSheet,
-  useColorScheme,
-  View,
-  LogBox,
-} from 'react-native';
-import * as React from 'react';
-
-import RNTesterModuleContainer from './components/RNTesterModuleContainer';
-import RNTesterModuleList from './components/RNTesterModuleList';
-import RNTesterNavBar, {navBarHeight} from './components/RNTesterNavbar';
-import RNTesterList from './utils/RNTesterList';
-import {
-  Screens,
-  initialState,
-  getExamplesListWithBookmarksAndRecentlyUsed,
-  getInitialStateFromAsyncStorage,
-} from './utils/testerStateUtils';
-import {useAsyncStorageReducer} from './utils/useAsyncStorageReducer';
-import {RNTesterReducer, RNTesterActionsType} from './utils/RNTesterReducer';
-import {RNTesterThemeContext, themes} from './components/RNTesterTheme';
-import RNTTitleBar from './components/RNTTitleBar';
-import {RNTesterEmptyBookmarksState} from './components/RNTesterEmptyBookmarksState';
-
-const APP_STATE_KEY = 'RNTesterAppState.v3';
-
-// RNTester App currently uses AsyncStorage from react-native for storing navigation state
-// and bookmark items.
-// TODO: Vendor AsyncStorage or create our own.
-LogBox.ignoreLogs([/AsyncStorage has been extracted from react-native/]);
-
-const RNTesterApp = (): React.Node => {
-  const [state, dispatch] = useAsyncStorageReducer(
-    RNTesterReducer,
-    initialState,
-    APP_STATE_KEY,
-  );
-  const colorScheme = useColorScheme();
-
-  const {
-    activeModuleKey,
-    activeModuleTitle,
-    activeModuleExampleKey,
-    screen,
-    bookmarks,
-    recentlyUsed,
-  } = state;
-
-  React.useEffect(() => {
-    getInitialStateFromAsyncStorage(APP_STATE_KEY).then(
-      initialStateFromStorage => {
-        dispatch({
-          type: RNTesterActionsType.INIT_FROM_STORAGE,
-          data: initialStateFromStorage,
-        });
-      },
-    );
-  }, [dispatch]);
-
-  const examplesList = React.useMemo(
-    () =>
-      getExamplesListWithBookmarksAndRecentlyUsed({bookmarks, recentlyUsed}),
-    [bookmarks, recentlyUsed],
-  );
-
-  const handleBackPress = React.useCallback(() => {
-    if (activeModuleKey != null) {
-      dispatch({type: RNTesterActionsType.BACK_BUTTON_PRESS});
-    }
-  }, [dispatch, activeModuleKey]);
-
-  // Setup hardware back button press listener
-  React.useEffect(() => {
-    const handleHardwareBackPress = () => {
-      if (activeModuleKey) {
-        handleBackPress();
-        return true;
-      }
-      return false;
-    };
-
-    BackHandler.addEventListener('hardwareBackPress', handleHardwareBackPress);
-
-    return () => {
-      BackHandler.removeEventListener(
-        'hardwareBackPress',
-        handleHardwareBackPress,
-      );
-    };
-  }, [activeModuleKey, handleBackPress]);
-
-  const handleModuleCardPress = React.useCallback(
-    ({exampleType, key, title}) => {
-      dispatch({
-        type: RNTesterActionsType.MODULE_CARD_PRESS,
-        data: {exampleType, key, title},
-      });
-    },
-    [dispatch],
-  );
-
-  const handleModuleExampleCardPress = React.useCallback(
-    exampleName => {
-      dispatch({
-        type: RNTesterActionsType.EXAMPLE_CARD_PRESS,
-        data: {key: exampleName},
-      });
-    },
-    [dispatch],
-  );
-
-  const toggleBookmark = React.useCallback(
-    ({exampleType, key}) => {
-      dispatch({
-        type: RNTesterActionsType.BOOKMARK_PRESS,
-        data: {exampleType, key},
-      });
-    },
-    [dispatch],
-  );
-
-  const handleNavBarPress = React.useCallback(
-    args => {
-      dispatch({
-        type: RNTesterActionsType.NAVBAR_PRESS,
-        data: {screen: args.screen},
-      });
-    },
-    [dispatch],
-  );
-
-  const theme = colorScheme === 'dark' ? themes.dark : themes.light;
-
-  if (examplesList === null) {
-    return null;
-  }
-
-  const activeModule =
-    activeModuleKey != null ? RNTesterList.Modules[activeModuleKey] : null;
-  const activeModuleExample =
-    activeModuleExampleKey != null
-      ? activeModule?.examples.find(e => e.name === activeModuleExampleKey)
-      : null;
-  const title =
-    activeModuleTitle != null
-      ? activeModuleTitle
-      : screen === Screens.COMPONENTS
-      ? 'Components'
-      : screen === Screens.APIS
-      ? 'APIs'
-      : 'Bookmarks';
-
-  const activeExampleList =
-    screen === Screens.COMPONENTS
-      ? examplesList.components
-      : screen === Screens.APIS
-      ? examplesList.apis
-      : examplesList.bookmarks;
-
-  return (
-    <RNTesterThemeContext.Provider value={theme}>
-      <RNTTitleBar
-        title={title}
-        theme={theme}
-        onBack={activeModule ? handleBackPress : null}
-        documentationURL={activeModule?.documentationURL}
-      />
-      <View
-        style={StyleSheet.compose(styles.container, {
-          backgroundColor: theme.GroupedBackgroundColor,
-        })}>
-        {activeModule != null ? (
-          <RNTesterModuleContainer
-            module={activeModule}
-            example={activeModuleExample}
-            onExampleCardPress={handleModuleExampleCardPress}
-          />
-        ) : screen === Screens.BOOKMARKS &&
-          examplesList.bookmarks.length === 0 ? (
-          <RNTesterEmptyBookmarksState />
-        ) : (
-          <RNTesterModuleList
-            sections={activeExampleList}
-            toggleBookmark={toggleBookmark}
-            handleModuleCardPress={handleModuleCardPress}
-          />
-        )}
-      </View>
-      <View style={styles.bottomNavbar}>
-        <RNTesterNavBar
-          screen={screen || Screens.COMPONENTS}
-          isExamplePageOpen={!!activeModule}
-          handleNavBarPress={handleNavBarPress}
-        />
-      </View>
-    </RNTesterThemeContext.Provider>
-  );
-};
-
-export default RNTesterApp;
-
-const styles = StyleSheet.create({
-  container: {
-    flex: 1,
-  },
-  bottomNavbar: {
-    height: navBarHeight,
-  },
-  hidden: {
-    display: 'none',
-  },
-});
+export default App;
